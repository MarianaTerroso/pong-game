%% Importing data
fid = fopen('ema.txt','r'); %'r' - open file for reading
dados = fscanf(fid, '%f %f %f %f', [4, inf]); % [4, inf] é a dimensão da matriz no qual vamos converter o sinal
fclose(fid);
dados=dados.'; % transporta da matriz
time = dados(:,1); % tempo em segundos
force = dados (:,2); % força em N
emg = dados(:,3); % raw emg em V
emg_integrated = dados(:,4); % integrated emg em V

figure;
subplot(3,1,1)
plot(time,force);
xlabel('Time(s)');
ylabel('Force (N)');

subplot(3,1,2)
plot(time,emg);
xlabel('Time(s)');
ylabel('Raw EMG (V)');

subplot(3,1,3)
plot(time,emg_integrated);
xlabel('Time(s)');
ylabel('Integrated EMG (V)');

%% Features of the signal
L=length(emg); %Number of samples
fs=(L)/(time(end)-time(1)); %Sampling frequency (Hz) -> 500.0257 
% The frequency range of EMG signal varies from dc to 10,000 Hz [1]. The desirable frequency content of 
% sEMG signal is 10–400 Hz with the dominant frequency content lying in the range of 50–150 Hz.
% https://www.sciencedirect.com/science/article/pii/S1746809415002050

%% FFT
f=fs*(0:(L/2))/L; %FFT frequency range
pl=fft(emg); % determination of FFT of raw EMG
pl=abs(pl/L); %normalization
pl = pl(1:L/2+1);
pl(2:end-1) = 2*pl(2:end-1);

pl_i=fft(emg_integrated); % % determination of FFT of EMG_integrated
pl_i=abs(pl_i/L); %normalization
pl_i = pl_i(1:L/2+1);
pl_i(2:end-1) = 2*pl_i(2:end-1);
figure;
subplot(2,1,1)
plot(f,pl);
xlabel('Frequency(Hz)');
ylabel('Intensity');
title('FFT - Raw EMG');
subplot(2,1,2)
plot(f,pl_i);
xlabel('Frequency(Hz)');
ylabel('Intensity');
title('FFT - EMG integrated');

%% Full wave retification
rec_signal = abs (emg);
figure;
plot(time,rec_signal);
xlabel('Time(s)');
ylabel('Voltage(V)');
title('EMG - Retification');

%% Determinação do filtro de média deslizante
%Estimativa do Filtro de média deslizante(h) 
dif = cell(1,291); % Vetores com a diferença entre o sinal 
%Integrated EMG e a convolução entre o módulo do sinal de 
%EMG e o filtro h estimado 
media=zeros(1,291); %Média dos valores dos vetores de diferença 
for n=10:300 
 h=(1/n)*ones(1,n);  intabsemg=conv(h,rec_signal); 
 dif{n-9}=intabsemg(1:L)-emg_integrated(1:L); 
 media(n-9)=sum(abs(dif{n-9}))/L; 
end  
  
for m=1:291 
    if media(m)== min(media) 
        mcerto=m; 
    end 
end 

%Gráfico do h estimado 
figure;
h=(1/(mcerto+9))*ones(1,mcerto+9); 
stem(0:mcerto+8, h) 
xlabel("Tempo(s)") 
ylabel("h") 
title ("Filtro de média deslizante estimado") 
axis([-10 110 0 0.02])

%% Normalization of the integration
maxi = max (emg_integrated);
normalized_i = (emg_integrated./maxi).*100;
figure;
plot(time,normalized_i);
xlabel('Time(s)');
ylabel('Voltage(V)');
title('EMG - Normalization - Integration');

%% Suavização 
window = 300;
emg2 = sqrt(movmean((normalized_i.^2),window));
figure;
plot(time,emg2);
xlabel('Time(s)');
ylabel('Voltage(V)');
title('EMG processed');

%% Segmentation
segment = 0.05;  % Segments (50 ms)
Samples = floor(fs* segment);    % Sample Length
number_of_segments=floor(L/Samples);
segments_lengths = [Samples*ones(1, number_of_segments) L-number_of_segments*Samples];
emg_segmented = mat2cell (emg2, segments_lengths);

%% AVG of the signal
mean_EMG = zeros(1,length(emg_segmented));
for i=1:length(emg_segmented)
    mean_EMG(i) = mean(emg_segmented{i,1});
end

%% Gravação de um ficheiro de texto
for i=2:length(mean_EMG)
    if mean_EMG(i)>mean_EMG(i-1)
        value = 1;
    else 
        value = 0;
    end
    
    fileID = fopen('output.txt', 'w');
    if fileID == -1
        error('Cannot open file for writing');
    end
    fprintf(fileID, '%i ', value);
    fclose(fileID);
end


%% Ligação ao teclado
% s = serialport("COM3",9600,"Timeout",5); % NAO SEI SE ISTO É PRECISO
% data = write(s,16,"uint32"); %NAO SEI SE ISTO É PRECISO

% import java.awt.AWTException;
% import java.awt.Robot;
% import java.awt.event.KeyEvent;
% robot=Robot;
% for i=2:length(mean_EMG)
%     if mean_EMG(i)>mean_EMG(i-1)
%         robot.keyPress(KeyEvent.VK_UP);
%         %u = udp('10.227.158.60',2000,'LocalIP','10.227.158.60','LocalPort',2001);
%         %fopen(u);
%         %fwrite (u,uint8(0));
%         %write(u, 0, "uint8", "10.227.158.60", 2000);
%     else 
%         robot.keyPress(KeyEvent.VK_DOWN);
%         %u = udp('10.227.158.60',2000,'LocalIP','10.227.158.60','LocalPort',2001);
%         %fopen(u)
%         %u = udpport;
%         %write(u, 1, "uint8", "10.227.158.60", 2000);
% 
%     end
% end

